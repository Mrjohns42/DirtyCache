-- VHDL Entity ece411.BranchDetector.symbol
--
-- Created:
--          by - ece411.ece411 (localhost)
--          at - 02:24:00 12/09/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY BranchDetector IS
   PORT( 
      IWN      : IN     std_logic;
      IWP      : IN     std_logic;
      IWZ      : IN     std_logic;
      N        : IN     std_logic;
      P        : IN     std_logic;
      Z        : IN     std_logic;
      isBR     : IN     std_logic;
      doBranch : OUT    std_logic
   );

-- Declarations

END BranchDetector ;

--
-- VHDL Architecture ece411.BranchDetector.struct
--
-- Created:
--          by - ece411.ece411 (localhost)
--          at - 02:24:00 12/09/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.NUMERIC_STD.all;
LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF BranchDetector IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL BRORout : std_logic;
   SIGNAL NCond   : std_logic;
   SIGNAL PCond   : std_logic;
   SIGNAL ZCond   : std_logic;


   -- Component Declarations
   COMPONENT BitAND2
   PORT (
      I0 : IN     std_logic ;
      I1 : IN     std_logic ;
      O  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT BitOR3
   PORT (
      I0 : IN     std_logic ;
      I1 : IN     std_logic ;
      I2 : IN     std_logic ;
      O  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : BitAND2 USE ENTITY ece411.BitAND2;
   FOR ALL : BitOR3 USE ENTITY ece411.BitOR3;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   BRDetectAND : BitAND2
      PORT MAP (
         I0 => isBR,
         I1 => BRORout,
         O  => doBranch
      );
   NCondAND : BitAND2
      PORT MAP (
         I0 => N,
         I1 => IWN,
         O  => NCond
      );
   PCondAND : BitAND2
      PORT MAP (
         I0 => P,
         I1 => IWP,
         O  => PCond
      );
   ZCondAND : BitAND2
      PORT MAP (
         I0 => Z,
         I1 => IWZ,
         O  => ZCond
      );
   BROR : BitOR3
      PORT MAP (
         I0 => NCond,
         I1 => ZCond,
         I2 => PCond,
         O  => BRORout
      );

END struct;
