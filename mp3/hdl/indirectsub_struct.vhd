-- VHDL Entity ece411.IndirectSub.symbol
--
-- Created:
--          by - ece411.ece411 (localhost)
--          at - 02:23:56 12/09/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY IndirectSub IS
   PORT( 
      CLK          : IN     STD_LOGIC;
      CWin         : IN     LC3b_controlword;
      RESET_L      : IN     STD_LOGIC;
      mispredict_l : IN     std_logic;
      stall_L      : IN     std_logic;
      CWout        : OUT    LC3b_controlword;
      sub          : OUT    std_logic
   );

-- Declarations

END IndirectSub ;

--
-- VHDL Architecture ece411.IndirectSub.struct
--
-- Created:
--          by - ece411.ece411 (localhost)
--          at - 02:23:56 12/09/12
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;
LIBRARY mp3lib;

ARCHITECTURE struct OF IndirectSub IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CWsub     : LC3b_controlword;
   SIGNAL LdInd     : STD_LOGIC;
   SIGNAL isInd     : std_logic;
   SIGNAL nextstate : std_logic;
   SIGNAL notState  : std_logic;
   SIGNAL state     : STD_LOGIC;

   -- Implicit buffer signal declarations
   SIGNAL sub_internal : std_logic;


   -- Component Declarations
   COMPONENT BitAND2
   PORT (
      I0 : IN     std_logic ;
      I1 : IN     std_logic ;
      O  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT BitNOT1
   PORT (
      I : IN     std_logic ;
      O : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT CWSplit
   PORT (
      CW              : IN     LC3b_ControlWord ;
      LoadPC          : OUT    std_logic ;
      LoadReg         : OUT    std_logic ;
      LoadNZP         : OUT    std_logic ;
      PCWriteback     : OUT    std_logic ;
      PCMuxSel        : OUT    std_logic ;
      PCAddMuxSel     : OUT    std_logic ;
      ExtPCMuxSel     : OUT    LC3b_4mux_sel ;
      DestMuxSel      : OUT    std_logic ;
      RFInputMuxSel   : OUT    std_logic ;
      StoreSR         : OUT    std_logic ;
      ImmMuxSel       : OUT    LC3b_4mux_sel ;
      ExMuxSel        : OUT    LC3b_4mux_sel ;
      AddrMuxSel      : OUT    std_logic ;
      DataMuxSel      : OUT    LC3b_4mux_sel ;
      ByteMuxSel      : OUT    std_logic ;
      WBMuxSel        : OUT    LC3b_4mux_sel ;
      ALUOp           : OUT    LC3b_ALUop ;
      MRead_l         : OUT    std_logic ;
      MWrite_l        : OUT    std_logic ;
      isBR            : OUT    std_logic ;
      isLD            : OUT    std_logic ;
      isST            : OUT    std_logic ;
      isInd           : OUT    std_logic ;
      isUnconditional : OUT    std_logic ;
      isIndirect      : OUT    std_logic ;
      isNormalBR      : OUT    std_logic ;
      isLEA           : OUT    std_logic ;
      noSrcA          : OUT    std_logic ;
      hasSrcB         : OUT    std_logic ;
      enBubble        : OUT    std_logic ;
      isIndLoad       : OUT    std_logic ;
      addNOPs         : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT cWordMux2
   PORT (
      A   : IN     LC3b_controlword ;
      B   : IN     LC3b_controlword ;
      sel : IN     std_logic ;
      F   : OUT    LC3b_controlword 
   );
   END COMPONENT;
   COMPONENT genCW_IndirectLoad
   PORT (
      CW_ILD : OUT    LC3b_ControlWord 
   );
   END COMPONENT;
   COMPONENT REG1
   PORT (
      RESET_L : IN     STD_LOGIC ;
      A       : IN     STD_LOGIC ;
      EN      : IN     STD_LOGIC ;
      CLK     : IN     STD_LOGIC ;
      F       : OUT    STD_LOGIC 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : BitAND2 USE ENTITY ece411.BitAND2;
   FOR ALL : BitNOT1 USE ENTITY ece411.BitNOT1;
   FOR ALL : CWSplit USE ENTITY ece411.CWSplit;
   FOR ALL : REG1 USE ENTITY mp3lib.REG1;
   FOR ALL : cWordMux2 USE ENTITY ece411.cWordMux2;
   FOR ALL : genCW_IndirectLoad USE ENTITY ece411.genCW_IndirectLoad;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   LdIndAND : BitAND2
      PORT MAP (
         I0 => isInd,
         I1 => stall_L,
         O  => LdInd
      );
   stateAND : BitAND2
      PORT MAP (
         I0 => mispredict_l,
         I1 => notState,
         O  => nextstate
      );
   subAND : BitAND2
      PORT MAP (
         I0 => notState,
         I1 => isInd,
         O  => sub_internal
      );
   stateNOT : BitNOT1
      PORT MAP (
         I => state,
         O => notState
      );
   sub_CWSplit : CWSplit
      PORT MAP (
         CW              => CWin,
         LoadPC          => OPEN,
         LoadReg         => OPEN,
         LoadNZP         => OPEN,
         PCWriteback     => OPEN,
         PCMuxSel        => OPEN,
         PCAddMuxSel     => OPEN,
         ExtPCMuxSel     => OPEN,
         DestMuxSel      => OPEN,
         RFInputMuxSel   => OPEN,
         StoreSR         => OPEN,
         ImmMuxSel       => OPEN,
         ExMuxSel        => OPEN,
         AddrMuxSel      => OPEN,
         DataMuxSel      => OPEN,
         ByteMuxSel      => OPEN,
         WBMuxSel        => OPEN,
         ALUOp           => OPEN,
         MRead_l         => OPEN,
         MWrite_l        => OPEN,
         isBR            => OPEN,
         isLD            => OPEN,
         isST            => OPEN,
         isInd           => isInd,
         isUnconditional => OPEN,
         isIndirect      => OPEN,
         isNormalBR      => OPEN,
         isLEA           => OPEN,
         noSrcA          => OPEN,
         hasSrcB         => OPEN,
         enBubble        => OPEN,
         isIndLoad       => OPEN,
         addNOPs         => OPEN
      );
   subMux : cWordMux2
      PORT MAP (
         A   => CWin,
         B   => CWsub,
         sel => sub_internal,
         F   => CWout
      );
   agenInd : genCW_IndirectLoad
      PORT MAP (
         CW_ILD => CWsub
      );
   IndState : REG1
      PORT MAP (
         RESET_L => RESET_L,
         A       => nextstate,
         EN      => LdInd,
         CLK     => CLK,
         F       => state
      );

   -- Implicit buffered output assignments
   sub <= sub_internal;

END struct;
